                                    ------
                                    Using sameas4j
                                    ------
                                    sameas4j
                                    ------
                                     2012

~~
~~   Copyright 2010-2012 The 99 Software Foundation
~~
~~   Licensed under the Apache License, Version 2.0 (the "License");
~~   you may not use this file except in compliance with the License.
~~   You may obtain a copy of the License at
~~
~~       http://www.apache.org/licenses/LICENSE-2.0
~~
~~   Unless required by applicable law or agreed to in writing, software
~~   distributed under the License is distributed on an "AS IS" BASIS,
~~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~   See the License for the specific language governing permissions and
~~   limitations under the License.
~~

Using sameas4j

  The <<<org.nnsoft.sameas4j.SameAsService>>> client is the core application
  class; to obtain an instance, just use the factory:

+--------------------------------------+
import org.nnsoft.sameas4j.*;

SameAsService sameAsService = DefaultSameAsServiceFactory.createNew();
+--------------------------------------+

  alternatively, users can access to a singleton instance

+--------------------------------------+
import org.nnsoft.sameas4j.*;

SameAsService sameAsService = DefaultSameAsServiceFactory.getSingletonInstance();
+--------------------------------------+

  and then call it to retrieve equivalent URIs for a Linked Data resource:

+--------------------------------------+
import org.nnsoft.sameas4j.*;

Equivalence equivalence = sameAsService.getDuplicates( new URI("http://dbpedia.org/resource/Mogwai") );

System.out.println( "Number of equivalent URIs: " + equivalence.getAmount() );

for ( URI uri : equivalence )
{
    System.out.println("Equivalent URI: " + uri );
}
+--------------------------------------+

  If you don't have an exact URI for your resource you could use the
  {{{http://sameas.org/about.php}co-referenced}} lookup using a keyword:

+--------------------------------------+
import org.nnsoft.sameas4j.*;

EquivalenceList equivalences = sameAsService.getDuplicates( "Rome" );

for ( Equivalence equivalence : equivalences )
{
    System.out.println( equivalence.getUri() );
}
+--------------------------------------+
