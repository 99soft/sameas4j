                                    ------
                                    Cache
                                    ------
                                    sameas4j
                                    ------
                                     2012

~~
~~ Copyright (c) 2009-2012 The 99 Software Foundation
~~
~~ Permission is hereby granted, free of charge, to any person obtaining a copy
~~ of this software and associated documentation files (the "Software"), to deal
~~ in the Software without restriction, including without limitation the rights
~~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
~~ copies of the Software, and to permit persons to whom the Software is
~~ furnished to do so, subject to the following conditions:
~~
~~ The above copyright notice and this permission notice shall be included in
~~ all copies or substantial portions of the Software.
~~
~~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
~~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
~~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
~~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
~~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
~~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
~~ THE SOFTWARE.
~~

Introduction

  Retrieving and parsing data from <sameas.org> could require more time than expected,
  so a cache could be helpful to avoid parsing already required URLs and speedup service
  operations.

The Cache interface

  The <<<org.nnsoft.sameas4j.cache.Cache>>> interface describes the easiest way to
  store and retrieve objects, given a <<<org.nnsoft.sameas4j.cache.CacheKey>>> instance.

  The <sameas4j> package comes with an easy in-memory based implementation class that simply
  stores and retrieve objects from a memory based LRU cache.

Plugging the Cache into SameAsService

  Very easy! Once obtained the <<<org.nnsoft.sameas4j.SameAsService>>> instance, just set the
  <<<org.nnsoft.sameas4j.cache.Cache>>> instance:

+--------------------------------------+
SameAsService service = DefaultSameAsServiceFactory.createNew();
service.setCache( new InMemoryCache() );
+--------------------------------------+
